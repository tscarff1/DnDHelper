import discord
import random
client = discord.Client()
turnTakers = []
tokenFile = open("token.txt", "r")
token = tokenFile.read()
@client.event
async def on_ready():
    print('We have logged in as {0.user}'.format(client))


@client.event
async def on_message(message):
    if message.author == client.user:
        return
    # Roll die command: Simulates the roll of a die with any number of sides
    # Parameters:
    #   0: Number of sides on the simulated die
    if message.content.startswith('!roll'):
        channel = message.channel
        userDie = int(message.content[6:])
        await channel.send(str(message.author.nick) + ' has rolled ' + str(random.randint(1, userDie)))

    # Assign Turn Order Command: Assigns the turn order to the members of the chat channel with the role 'player'
    # and any number of enemies. Sends a message displaying the turn order
    # Parameters:
    #   0: Number of enemies to include in the turn order
    if message.content.startswith('!assignTurnOrder'):
        channel = message.channel
        members = channel.members
        # Assign the nicknames of players to the global turn takers array
        global turnTakers
        turnTakers = []
        for member in members:
            for role in member.roles:
                if role.name == 'player':
                    if member.nick is not None:
                        turnTakers.append(member.nick)
                    else:
                        turnTakers.append(member.name)
                    break

        # Add enemies with name 'Enemy <#>' to the global turn takers array
        numEnemies = int(message.content.split()[1])
        itr = 0
        while itr < numEnemies:
            itr += 1
            turnTakers.append('enemy ' + str(itr))

        # Randomize the contents of the turn takers array
        random.shuffle(turnTakers)
        returnMessage = ''
        for turnTaker in turnTakers:
            returnMessage += turnTaker + '\r\n'
        await message.channel.send(returnMessage)

    # Get Turn Order Command: Sends a message with the turn order generated by the "assignTurnOrder" command
    if message.content.startswith('!getTurnOrder'):
        returnMessage = ''
        for turnTaker in turnTakers:
            returnMessage += turnTaker + '\r\n'
        await message.channel.send(returnMessage)


client.run(token)
